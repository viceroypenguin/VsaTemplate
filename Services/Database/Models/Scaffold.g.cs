// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB;
using LinqToDB.Data;
using LinqToDB.Mapping;
using System;
using System.Collections.Generic;
using VsaTemplate.Database.Models;

#pragma warning disable 1573, 1591
#nullable enable

namespace VsaTemplate.Database
{
	public partial class DbContext : DataConnection
	{
		partial void InitDataContext();

		public ITable<Feature>        Features         => this.GetTable<Feature>();
		public ITable<FeatureType>    FeatureTypes     => this.GetTable<FeatureType>();
		public ITable<User>           Users            => this.GetTable<User>();
		public ITable<VersionHistory> VersionHistories => this.GetTable<VersionHistory>();
	}
}
namespace VsaTemplate.Database.Models
{
	[Table("Feature")]
	public class Feature
	{
		[Column("FeatureId"           , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int            FeatureId            { get; set; } // int
		[Column("Name"                , CanBeNull    = false                                                             )] public string         Name                 { get; set; } = null!; // nvarchar(200)
		[Column("FeatureTypeId"                                                                                          )] public int            FeatureTypeId        { get; set; } // int
		[Column("CreatorUserId"                                                                                          )] public int            CreatorUserId        { get; set; } // int
		[Column("LastUpdatedTimestamp"                                                                                   )] public DateTimeOffset LastUpdatedTimestamp { get; set; } // datetimeoffset(7)
		[Column("ValueA"                                                                                                 )] public int            ValueA               { get; set; } // int
		[Column("ValueB"                                                                                                 )] public string?        ValueB               { get; set; } // nvarchar(max)

		#region Associations
		/// <summary>
		/// FK_Feature_FeatureType
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(FeatureTypeId), OtherKey = nameof(Models.FeatureType.FeatureTypeId))]
		public FeatureType FeatureType { get; set; } = null!;

		/// <summary>
		/// FK_Feature_User
		/// </summary>
		[Association(CanBeNull = false, ThisKey = nameof(CreatorUserId), OtherKey = nameof(User.UserId))]
		public User CreatorUser { get; set; } = null!;
		#endregion
	}

	[Table("FeatureType")]
	public class FeatureType
	{
		[Column("FeatureTypeId", IsPrimaryKey = true )] public int    FeatureTypeId { get; set; } // int
		[Column("Name"         , CanBeNull    = false)] public string Name          { get; set; } = null!; // varchar(200)

		#region Associations
		/// <summary>
		/// FK_Feature_FeatureType backreference
		/// </summary>
		[Association(ThisKey = nameof(FeatureTypeId), OtherKey = nameof(Feature.FeatureTypeId))]
		public IEnumerable<Feature> Features { get; set; } = null!;
		#endregion
	}

	[Table("User")]
	public class User
	{
		[Column("UserId"      , IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int     UserId       { get; set; } // int
		[Column("Auth0UserId"                                                                                    )] public string? Auth0UserId  { get; set; } // nvarchar(100)
		[Column("EmailAddress", CanBeNull    = false                                                             )] public string  EmailAddress { get; set; } = null!; // nvarchar(500)
		[Column("Name"                                                                                           )] public string? Name         { get; set; } // nvarchar(200)
		[Column("IsActive"                                                                                       )] public bool    IsActive     { get; set; } // bit

		#region Associations
		/// <summary>
		/// FK_Feature_User backreference
		/// </summary>
		[Association(ThisKey = nameof(UserId), OtherKey = nameof(Feature.CreatorUserId))]
		public IEnumerable<Feature> Features { get; set; } = null!;
		#endregion
	}

	[Table("VersionHistory")]
	public class VersionHistory
	{
		[Column("VersionHistoryId", IsPrimaryKey = true , IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int            VersionHistoryId { get; set; } // int
		[Column("SqlFile"         , CanBeNull    = false                                                             )] public string         SqlFile          { get; set; } = null!; // varchar(50)
		[Column("ExecutionStart"                                                                                     )] public DateTimeOffset ExecutionStart   { get; set; } // datetimeoffset(7)
		[Column("ExecutionEnd"                                                                                       )] public DateTimeOffset ExecutionEnd     { get; set; } // datetimeoffset(7)
	}
}
